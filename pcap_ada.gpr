with "config/pcap_ada_config.gpr";
library project Pcap_Ada is

   type Os_Kind is ("freebsd", "openbsd", "linux", "macos", "windows", "os-unknown");
   Pcap_Ada_Os_Kind : Os_Kind := Pcap_Ada_Config.Alire_Host_Os;

   for Library_Name use "pcap-ada";
   for Library_Version use "libpcap-ada.so." & Pcap_Ada_Config.Crate_Version;

   for Source_Dirs use ("src/");
   for Object_Dir use "obj/" & Pcap_Ada_Config.Build_Profile;
   for Create_Missing_Dirs use "True";
   for Library_Dir use "lib";

   type Library_Type_Type is ("dynamic", "relocatable", "static", "static-pic");
   Library_Type : Library_Type_Type :=
     external ("PCAP_ADA_LIBRARY_TYPE", external ("LIBRARY_TYPE", "dynamic"));
   for Library_Kind use Library_Type;

   case Pcap_Ada_Os_Kind is
      when "windows" =>
         for Library_Options use ("-lwpcap");
      when others => null;
   end case;

   package Builder is
      for Default_Switches ("Ada") use ("-x");
   end Builder;

   package Compiler is
      for Default_Switches ("Ada") use Pcap_Ada_Config.Ada_Compiler_Switches;
      Pcap_Ada_Version := """" & Pcap_Ada_Config.Crate_Version & """";
      Preprocessor_Switches := (
         "-gnateDPCAP_ADA_VERSION=" & Pcap_Ada_Version,
         "-gnateDPCAP_ADA_OS_KIND=" & Pcap_Ada_Os_Kind,
         "-gnatep=preprocessor-data.txt"
      );
      for Switches ("Ada") use Compiler'Default_Switches ("Ada") & Preprocessor_Switches;
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Install is
      for Artifacts (".") use ("share");
   end Install;

end Pcap_Ada;
